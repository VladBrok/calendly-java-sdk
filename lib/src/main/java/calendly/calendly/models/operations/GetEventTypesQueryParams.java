/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package calendly.calendly.models.operations;

import calendly.calendly.utils.SpeakeasyMetadata;

public class GetEventTypesQueryParams {
    /**
     * Return only active event types if true, only inactive if false, or all event types if this parameter is omitted.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=active")public Boolean active;
    public GetEventTypesQueryParams withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * Return only admin managed event types if true, exclude admin managed event types if false, or include all event types if this parameter is omitted.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=admin_managed")public Boolean adminManaged;
    public GetEventTypesQueryParams withAdminManaged(Boolean adminManaged) {
        this.adminManaged = adminManaged;
        return this;
    }
    
    /**
     * The number of rows to return
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=count")public Double count;
    public GetEventTypesQueryParams withCount(Double count) {
        this.count = count;
        return this;
    }
    
    /**
     * View available personal, team, and organization event types associated with the organization's URI.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=organization")public String organization;
    public GetEventTypesQueryParams withOrganization(String organization) {
        this.organization = organization;
        return this;
    }
    
    /**
     * The token to pass to get the next or previous portion of the collection
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page_token")public String pageToken;
    public GetEventTypesQueryParams withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * Order results by the specified field and direction. Accepts comma-separated list of {field}:{direction} values.
     * Supported fields are: name.
     * Sort direction is specified as: asc, desc.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")public String sort;
    public GetEventTypesQueryParams withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * View available personal, team, and organization event types associated with the user's URI.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=user")public String user;
    public GetEventTypesQueryParams withUser(String user) {
        this.user = user;
        return this;
    }
    
}
